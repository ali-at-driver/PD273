from contextlib import contextmanager
import tempfile # FIXME: immutable
import subprocess
from cutadapt.scripts import cutadapt
import adapters
import re
import os


#p3 = subprocess.Popen(["cutadapt", "-a", adapters.adp, "-o", ""])#, stdin=p1.stdout, stdout=subprocess.PIPE)

def get_adapter(infile, pre_adapter, read_num):
    """ TODO: find a way to retrieve using cutadapt, forexample
    """

    p1 = subprocess.Popen(["gunzip", "-c", infile], stdout=subprocess.PIPE)

    p2 = subprocess.Popen(["head", "-n", "1"], stdin=p1.stdout)

    #pattern = re.compile('([ATCG]{5,8})')
    print(p2.readline())
#    inserts = re.search(str(p2.communicate()[0]), '([ATCG]{5,8})')#pattern)
#    print(inserts.group(0))
    # TODO: one or both? O|1
#    if inserts:
#        print(inserts.group(0))
#        return pre_adapter.replace("XXXXXXXX", inserts.group(read_num))
#    return None

@contextmanager
def temporary_path(name):
#    directory = os.path.join(os.path.dirname(__file__))
#    if not os.path.isdir(directory):
#        os.mkdir(directory)
    path = os.path.join(name)
    yield path
    os.remove(path)

#@contextmanager
def datapath(path):
    # TODO: use.....
    return os.path.join(os.path.dirname(__file__), path)


def run(infile, pre_adapter, infile2=None, params=None):
    #params, expected, inpath, inpath2=None):
    if type(params) is str:
        params = params.split()
    # DO CHECKS
    params = ['-a']
    # adapter for R1,
    adapter0 = get_adapter(infile, pre_adapter, 0)
    params += [str(adapter0)]
    #if infile2:
    #    adapter2 = get_adapter(infile2, pre_adapter, 1)
